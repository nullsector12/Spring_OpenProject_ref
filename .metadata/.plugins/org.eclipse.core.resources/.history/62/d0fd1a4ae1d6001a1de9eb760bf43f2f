<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.rog//DTD Mapper 3,0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- sql 설정 : sql문, 반환타입, 파라미터 설정 -->
<mapper namespace="com.aia.op.mybatis.mapper.MemberMapper.MemberDaoInterface">
	
	<select id="selectByIdPw" 
		resultType="com.aia.op.member.model.Member">
		select * from project.member where uid = #{param1} and upw= #{param2}
											<!-- 
												interface에서 String타입의 정보가 넘어올 뿐,
												변수명(id값) 을 가지고 넘어오는게 아니다.
												
												따라서, 다수의 변수가 넘어올땐 
												변수명이 아닌 
												넘어오는 param의 순서로 값을 넣어준다   
											-->
	</select>
	
	
	<!--
		resultMap 
		=> 테이블의 컬럼명과 java beans의 변수의 이름이 틀린경우 
			select의 결과를 객체에 바인딩해주는 역할
			type = 멤버 객체 타입 
			id = 멤버 이름
	-->
	<resultMap type="com.aia.op.member.model.Member" id="resultMember">
	
	</resultMap>
	
	<!--
		검색 : id, name, id or name
		map.put("searchType", "id") name, both
		map.put("keyword", "cool")  
	-->
	<select id="selectByKeyword" 
		parameterType="map"
		resultMap="resultMember"
		>
		select * from project.member
		
		<where>
			<if test="searchType == 'both">
			uid like concat('%',#{keyword},'%') or uname like concat('%','#{keyword)','%')
			</if>
			<if test="searchType == 'id">
			uid like concat('%',#{keyword},'%')
			</if>
			<if test="searchType == 'name">
			uname like concat('%',#{keyword},'%')
			</if>
		</where>
	</select>
	
	
	
	<insert id="insertMember"
		parameterType="com.aia.op.member.model.Member">
		
		INSERT INTO project.member (uid, upw, uname, uphoto)
		VALUES (#{uid}, #{upw}, #{uname}, #{uphoto} )	
	</insert>
	
	<!--
		1. id = 이름작성 
		2. sql문 작성
		3. 파라미터 정의
	-->
	
	<!-- <select id="selectById"
		resultType="com.aia.op.member.model.Member">
		select count(*) from project.member where uid = #{uid}		
	</select> -->
	
	
	
<!-- 	<insert id="insertMember"
		parameterType="com.aia.op.member.model.Member">
		
		INSERT INTO project.member (uid, upw, uname, uphoto)
		VALUES (#{uid}, #{upw}, #{uname}, #{uphoto} )	
	</insert> -->
	
</mapper>