<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- sql 설정 : sql문, 반환 타입, 파라미터 설정 -->
<mapper namespace="com.aia.op.member.dao.MemberDaoInterface">

	<select id="selectByIdPw" 
		resultType="com.aia.op.member.model.Member">
		select * from project.member where uid = #{param1} and upw= #{param2}
											<!-- 
												interface에서 String타입의 정보가 넘어올 뿐,
												변수명(id값) 을 가지고 넘어오는게 아니다.
												
												따라서, 다수의 변수가 넘어올땐 
												변수명이 아닌 
												넘어오는 param의 순서로 값을 넣어준다   
											-->
	</select>
	
	
	<!--
	### 동적 SQL문 설정 ###
	
		resultMap 
		=> 테이블의 컬럼명과 java beans의 변수의 이름이 틀린경우 
			select의 결과를 객체에 바인딩해주는 역할
			type = 멤버 객체 타입 
			id = 멤버 이름
			설정 column 이름내의 값을 설정한 property 안에 set
	-->
	<resultMap 
		type="com.aia.op.member.model.Member" 
		id="resultMember">
		<id property="idx" column="idx" />
		<result property="uid" column="uid" />
		<result property="upw" column="upw" />
		<result property="uname" column="uname" />
		<result property="uphoto" column="uphoto" />
	</resultMap>
	
	<!--
		검색 : id, name, id or name
		map.put("searchType", "id") name, both
		map.put("keyword", "cool")  
	-->
	
	<!-- parameterType = map => Map/HashMap -->
	<select id="totalCount" 
			parameterType="map" resultType="int">
			select count(*) project.member 
	<!-- 	#{search.searchType} -->
	<where>
		<if test="search.searchType !- null and search.keyword != null">
			<if test="search.searchType == 'both">
				<include refid="whereID" />
				<include refid="whereName" />
			</if>
			<if test="search.searchType == 'id">
				<include refid="whereID" />
			</if>
			<if test="search.searchType == 'name">
				<include refid="whereName" />
			</if>
		</if>
	</where>
	</select>
	
	<select id="selectList" 
		parameterType="map"
		resultMap="resultMember"
	>
	select * from project.member
	
	<where>
		<if test="search.searchType != null and search.keyword != null">
			<if test="search.searchType == 'both">
				<include refid="whereID" />
				<include refid="whereName" />
			</if>
			<if test="search.searchType == 'id">
				<include refid="whereID" />
			</if>
			<if test="search.searchType == 'name">
				<include refid="whereName" />
			</if>
		</if>
	</where>
	
	limit #{search.startRow}, #{search.count}
	
	</select>
	
	
<!-- 	<select id="selectByKeyword" 
		parameterType="map"
		resultMap="resultMember"
		>
		select * from project.member
		
		<where>
		<if test="searchType != null and keyword != null">
			<if test="searchType == 'both">
		uid like concat('%',#{keyword},'%') or uname like concat('%','#{keyword)','%')
			
			<include refid="whereID" />
			<include refid="whereName" />
			
			</if>
			<if test="searchType == 'id">
		uid like concat('%',#{keyword},'%')
			
			<include refid="whereID" />
			
			</if>
			<if test="searchType == 'name">
		uname like concat('%',#{keyword},'%')
			
			<include refid="whereName" />
			
			</if>
		</if>	
		</where>
	</select> -->
	
	<insert id="insertMember"
		parameterType="com.aia.op.member.model.Member"
		useGeneratedKeys="true" 
		keyProperty="idx"
		>
		<!-- 
			useGeneratedKeys = 자동 증가하는 값 사용 설정 (set)
			keyProperty = 자동증가하는 값의 id값
		 -->
		
		INSERT INTO project.member (uid, upw, uname, uphoto)
		VALUES (#{uid}, #{upw}, #{uname}, #{uphoto} )	
	</insert>
	
	<sql id="whereID">
		or uid like concat('%','#{keyword}', '%')
	</sql>
	<sql id="whereName">
		or uname like concat('%','#{keyword}', '%')
	</sql>






</mapper>